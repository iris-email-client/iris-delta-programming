SPL IrisDeltaJ {

	Features = {Base, Persistence, RelationalDB, LuceneDB, UI, Console, Window, AddressBook, Tag}

	Deltas = {dBase, dBaseException, dBaseCommand, dBaseModel, dBasePersistence,
	dBaseMail, dBaseFacade, dGmailProvider, dPersistenceRelational, dPersistenceLucene, 
	dAddressBook, dAddressBookRelational, dAddressBookLucene, dAddressBookConsole, dAddressBookFacade, 
	dTestAddressBookDAO, dTestFolderDAO, dTagBase, dTagRelational, dTestRelationalTagDAO, dConsole}

	Constraints {
	// Put boolean expression representation of the feature model here.
		Base & Persistence & UI | AddressBook | Tag; 
		Persistence & (RelationalDB ^ LuceneDB);
		UI & (Console ^ Window);
	}

	Partitions {
	// Put mapping between deltas and feature configurations here. 
		{dBase, dBaseCommand, dBaseException, dBaseModel, dBasePersistence, dBaseMail,
		dGmailProvider, dBaseFacade} when (Base);

		{dPersistenceRelational, dTestFolderDAO} when (RelationalDB);
		
		{dPersistenceLucene} when (LuceneDB);

		{dAddressBook, dAddressBookRelational, dAddressBookConsole, dAddressBookFacade, dTestAddressBookDAO} when (RelationalDB & AddressBook);
		
		{dAddressBook, dAddressBookLucene, dAddressBookConsole, dAddressBookFacade} when (LuceneDB & AddressBook);	
		
		{dTagBase, dTagRelational, dTestRelationalTagDAO} when (RelationalDB & Tag);

		{dConsole} when (Console);
	}

	Products {
		SimpleRelational = {Base, RelationalDB, Console};
		SimpleRelationalAddressBook = {Base, RelationalDB, AddressBook, Console};
		SimpleRelationalTag = {Base, RelationalDB, Tag, Console};
		CompleteRelational = {Base, RelationalDB, AddressBook, Tag, Console};
		SimpleLucene = {Base, LuceneDB, Console};
		SimpleLuceneAddressBook = {Base, LuceneDB, AddressBook, Console};		
	} 
}  