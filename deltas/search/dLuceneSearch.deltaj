delta dLuceneSearch {
	adds {
		package br.unb.cic.iris.search;
		
		import br.unb.cic.iris.core.model.EmailMessage;
		import br.unb.cic.iris.persistence.lucene.IndexManager;
		
		import java.io.IOException;
		import java.util.ArrayList;
		import java.util.List;
		
		import org.apache.lucene.analysis.standard.StandardAnalyzer;
		import org.apache.lucene.index.Term;
		import org.apache.lucene.queryparser.classic.ParseException;
		import org.apache.lucene.queryparser.classic.QueryParser;
		import org.apache.lucene.search.BooleanClause;
		import org.apache.lucene.search.BooleanClause.Occur;
		import org.apache.lucene.search.BooleanQuery;
		import org.apache.lucene.search.IndexSearcher;
		import org.apache.lucene.search.Query;
		import org.apache.lucene.search.TermQuery;
		import org.apache.lucene.search.TopDocs;
		
		public class LuceneSearch {

			public List<EmailMessage> searchEmail(String queryStr, int numberOfHits)
			throws ParseException, IOException {

				Query userQuery = new QueryParser(queryStr, new
					StandardAnalyzer()).parse(queryStr);
				Query typeQuery = new TermQuery(new Term("type", "email"));

				BooleanQuery query = new BooleanQuery();
				query.add(new BooleanClause(typeQuery, Occur.MUST));
				query.add(new BooleanClause(userQuery, Occur.MUST));

				IndexSearcher searcher = IndexManager.getSearcher();

				TopDocs docs = searcher.search(query, numberOfHits);
				List<EmailMessage> emails = new ArrayList<EmailMessage>();

				// TODO: The idea here is to iterate over the results converting the
				// retrieved Documents to EmailMessages and adding them into the result
				// list. However, in order to that, it's necessary to alter the
				// visibility of the method fromDocument(), which is currently
				// protected. Besides that, its first parameter (int doc) is not used
				// inside the function and would be better removed.

				// The question that arises is: Should I add deltas to perform those
				// changes (i.e. Change the method access modifier to public, remove the
				// int parameter and update every call to the method) or simply alter
				// the existing deltas?

				/*
				for (ScoreDoc sDoc : docs.scoreDocs) {
					EmailDAO emailDAO = EmailDAO.instance();
					Document doc = searcher.doc(sDoc.doc);
					int unusedParam = -1;
					Email email = emailDAO.fromDocument(unusedParam, doc);
					emails.add(email);
				}
				*/

				return emails;
			}

		}
	}
}
		