delta dAddressBook {
	adds {
		package br.unb.cic.iris.core.model;

		public class AddressBookEntry {

			private String id;

			private String nick;

			private String address;

			public AddressBookEntry() {
			}

			public AddressBookEntry(String nick, String address) {
				this.nick = nick;
				this.address = address;
			}

			public String getId() {
				return id;
			}

			public void setId(String id) {
				this.id = id;
			}

			public String getNick() {
				return nick;
			}

			public void setNick(String nick) {
				this.nick = nick;
			}

			public String getAddress() {
				return address;
			}

			public void setAddress(String address) {
				this.address = address;
			}
		}
	}
	adds {
		package br.unb.cic.iris.persistence;

		import br.unb.cic.iris.core.exception.EmailException;
		import br.unb.cic.iris.core.model.AddressBookEntry;

		/**
		 * A DAO for address books. 
		 * 
		 * @author modularidade
		 *
		 */
		public interface IAddressBookDAO {

			public void save(AddressBookEntry entry) throws EmailException;

			public AddressBookEntry find(String nick) throws EmailException;

			public void delete(String nick) throws EmailException;
		}
	}

	modifies br.unb.cic.iris.mail.EmailClient {

		adds private String findAddress(String email) throws EmailException {
			if(email != null && ! email.equals("") && ! EmailValidator.validate(email))
			{
				return AddressBookDAO.instance().find(email).getAddress();
			}
			return email;
		}
		modifies send(EmailMessage email) throws EmailException {
			email.setTo(findAddress(email.getTo()));
			email.setCc(findAddress(email.getCc()));
			email.setBcc(findAddress(email.getBcc()));
		}
	}

}